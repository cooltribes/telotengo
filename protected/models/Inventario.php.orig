<?php

/**
 * This is the model class for table "tbl_inventario".
 *
 * The followings are the available columns in table 'tbl_inventario':
 * @property integer $id
 * @property double $precio
 * @property integer $cantidad
 * @property integer $almacen_id
 * @property integer $producto_id
 *
 * The followings are the available model relations:
 * @property BolsaHasTblInventario[] $bolsaHasTblInventarios
 * @property Almacen $almacen
 * @property Producto $producto
 * @property OrdenHasInventario[] $ordenHasInventarios
 * @property WishlistHasTblInventario[] $wishlistHasTblInventarios
 */

/*
ESTADOS:
1 - Activo
2 - Agotado (ya se vendieron todas las unidades)
3 - Eliminado (eliminado por un administrador o la empresa)

*/

class Inventario extends CActiveRecord
{
	/**
	 * Returns the static model of the specified AR class.
	 * @param string $className active record class name.
	 * @return Inventario the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}

	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'tbl_inventario';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('precio, cantidad, almacen_id, producto_id, estado', 'required'),
			array('cantidad, almacen_id, producto_id, estado', 'numerical', 'integerOnly'=>true),
			array('precio', 'numerical'),
			// The following rule is used by search().
			// Please remove those attributes that should not be searched.
			array('id, precio, cantidad, almacen_id, producto_id, estado', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
			'bolsaHasTblInventarios' => array(self::HAS_MANY, 'BolsaHasTblInventario', 'inventario_id'),
			'almacen' => array(self::BELONGS_TO, 'Almacen', 'almacen_id'),
			'producto' => array(self::BELONGS_TO, 'Producto', 'producto_id'),
			'ordenHasInventarios' => array(self::HAS_MANY, 'OrdenHasInventario', 'inventario_id'),
			'wishlistHasTblInventarios' => array(self::HAS_MANY, 'WishlistHasTblInventario', 'inventario_id'),
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'precio' => 'Precio',
			'cantidad' => 'Cantidad',
			'almacen_id' => 'Almacen',
			'producto_id' => 'Producto',
			'estado' => 'Estado',
		);
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions.
	 */
	public function search()
	{
		// Warning: Please modify the following code to remove attributes that
		// should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('id',$this->id);
		$criteria->compare('precio',$this->precio);
		$criteria->compare('cantidad',$this->cantidad);
		$criteria->compare('almacen_id',$this->almacen_id);
		$criteria->compare('producto_id',$this->producto_id);
		$criteria->compare('estado',$this->estado);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

	public function buscar_activos()
	{
		$criteria=new CDbCriteria;

		$criteria->compare('estado', 1);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

<<<<<<< HEAD
	public function getMenor($id){
		$inventarios = Inventario::model()->findByAttributes(array('producto_id'=>$id),array('order'=>'precio'));
		
		return $inventarios;
	}

	public function getOpcionesCompra($not_this, $producto_id){
		$criteria = new CDbCriteria();
		$criteria->condition = 'id != '.$not_this.' AND producto_id = '.$producto_id;
		$criteria->order = 'precio ASC';

		$inventarios = Inventario::model()->findAll($criteria);
=======
	public function get_menor($id)
	{
		$inventarios = Inventario::model()->findByAttributes(array('producto_id'=>$id),arraY('order'=>'precio'));
>>>>>>> f02e956882ddc94c7a9d5e37c9a866edd06e5e76
		
		return $inventarios;
	}
}